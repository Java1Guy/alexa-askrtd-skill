# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: askrtd

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: java8
  # role: arn:aws:iam::792730539207:role/Lambda-ML-DynamoDB
  memorySize: 1024
  apiKeys:
    # - RunFraudPredictML4S-${opt:stage}
  # deploymentBucket: 47lining-devops
  # deploymentBucket: colonyml

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
# iamRoleStatements:
#   - Effect: "Allow"
#     Action:
#       - "lambda:InvokeFunction"
#     Resource: "*"
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
# Use sbt clean package assembly to create this jar file
# (sbt package doesn't include the dependencies)
package:
  artifact: target/scala-2.12/askrtd.jar

functions:
  alexa:
    handler: com.peopledesigned.askrtd.AskrtdSpeechletRequestStreamHandler

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
      - alexaSkill

#    Define function environment variables here
    environment:
      TIMEOUT: 0.5
      ML_ENDPOINT: https://realtime.machinelearning.us-east-1.amazonaws.com
      ML_MODEL_ID: ml-GAFOUksbin9
      STAGE: ${opt:stage}

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
